{
  "openapi": "3.0.3",
  "info": {
    "title": "BetGames",
    "version": "1.0",
    "description": "This is the api documentation of BetGames",
    "x-logo": {
      "url": ""
    }
  },
  "servers": [
    {
      "url": "https://Betgamesback-env.eba-wneafxtm.us-east-1.elasticbeanstalk.com",
      "description": "The AWS where the back is autodeploy at each commit",
      "x-last-modified": 1665867471272
    }
  ],
  "paths": {
    "/user/login": {
      "summary": "Login the user",
      "description": "This path is used to log the user if the credentials are good, return an error if the credentials are wrong",
      "post": {
        "parameters": [
          {
            "deprecated": false,
            "example": "qwer.tyu@toto.com",
            "name": "mail",
            "description": "The mail of the user used to login",
            "schema": {
              "format": "email",
              "type": "string"
            },
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "x-last-modified": 1665868792586
          },
          {
            "deprecated": false,
            "example": "\"123456qwerty!@#\"",
            "name": "password",
            "description": "The password of the user",
            "schema": {
              "format": "password",
              "type": "string"
            },
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "x-last-modified": 1665868671171
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjM0ZjQ2ODU1MzU4MDAxM2Q0NzQwZCIsImlhdCI6MTY2NTg2NjIyOCwiZXhwIjoxNjY1OTUyNjI4fQ.8Y0YV7mYKjZc3qZ3jK6W1C5O5x2b3qo3c\""
                    }
                  }
                }
              }
            },
            "description": "The user is connected",
            "x-last-modified": 1665869013995
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "\"Wrong email or password\"",
                      "x-last-modified": 1665869428764
                    }
                  }
                }
              }
            },
            "description": "The email or the password are wrong",
            "x-last-modified": 1665869428764
          }
        },
        "operationId": "login",
        "summary": "Login the user",
        "description": "This operation is used to login the user"
      },
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\"User disconnected\""
                    }
                  }
                }
              }
            },
            "description": "The user is disconnected",
            "x-last-modified": 1665869013995
          }
        },
        "operationId": "logout",
        "summary": "Logout the user"
      },
      "x-last-modified": 1665867774437
    },
    "/user/account": {
      "summary": "Manage account",
      "description": "Create or delete an account",
      "get": {
        "parameters": [
          {
            "deprecated": false,
            "name": "userId",
            "description": "The id of the user we want to obtain",
            "schema": {
              "$ref": "#/components/schemas/UserId"
            },
            "in": "query",
            "required": false,
            "allowEmptyValue": false,
            "x-last-modified": 1667086117800
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTest"
                },
                "example": ""
              }
            },
            "description": "The user has been deleted",
            "x-last-modified": 1667086041245,
            "headers": {},
            "links": {}
          }
        },
        "operationId": "get-user",
        "summary": "Get the user with the specified id",
        "description": "Return the user that match the id"
      },
      "put": {
        "parameters": [
          {
            "deprecated": false,
            "name": "userId",
            "schema": {
              "$ref": "#/components/schemas/UserId"
            },
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "x-last-modified": 1667085780834
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTest"
                }
              }
            },
            "description": "The user has been modified",
            "x-last-modified": 1667085855632
          }
        },
        "operationId": "modify-user",
        "summary": "Modify the user with the id",
        "description": ""
      },
      "post": {
        "tags": [],
        "responses": {
          "200": {
            "description": "The user is created",
            "x-last-modified": 1667085563844
          }
        },
        "operationId": "register-user",
        "summary": "Create a user",
        "description": ""
      },
      "delete": {
        "tags": [],
        "parameters": [
          {
            "deprecated": false,
            "name": "userId",
            "description": "The id of the user we want to delete",
            "schema": {
              "$ref": "#/components/schemas/UserId"
            },
            "in": "query",
            "required": false,
            "allowEmptyValue": false,
            "x-last-modified": 1667085897512
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTest"
                },
                "example": ""
              }
            },
            "description": "The user has been deleted",
            "x-last-modified": 1667086041245
          }
        },
        "operationId": "delete-user",
        "summary": "Delete the user with the specified id"
      },
      "x-last-modified": 1667041212307
    }
  },
  "components": {
    "schemas": {
      "Match": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": [
              0
            ]
          },
          "teamA": {
            "type": "string",
            "example": [
              "G2"
            ]
          },
          "coteA": {
            "type": "number",
            "example": [
              1.3
            ]
          },
          "teamB": {
            "type": "string",
            "example": [
              "FNC"
            ]
          },
          "coteB": {
            "type": "number",
            "example": [
              5.3
            ]
          },
          "date": {
            "type": "string",
            "example": [
              "2020-10-10T12:00:00Z"
            ]
          },
          "status": {
            "type": "string",
            "example": [
              "finished"
            ]
          },
          "scoreA": {
            "type": "number",
            "example": [
              3
            ]
          },
          "scoreB": {
            "type": "number",
            "example": [
              0
            ]
          }
        },
        "example": {
          "id": 0,
          "teamA": "G2",
          "coteA": 1.3,
          "teamB": "FNC",
          "coteB": 5.3,
          "date": "2020-10-10T12:00:00Z",
          "status": "finished",
          "scoreA": 3,
          "scoreB": 0
        },
        "x-last-modified": 1666642113807
      },
      "League": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": [
              "LEC"
            ]
          },
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Match"
            }
          }
        },
        "example": {
          "name": "LEC",
          "matches": [
            {
              "id": 0,
              "teamA": "G2",
              "coteA": 1.3,
              "teamB": "FNC",
              "coteB": 5.3,
              "date": "2020-10-10T12:00:00Z",
              "status": "finished",
              "scoreA": 3,
              "scoreB": 0
            }
          ]
        },
        "x-last-modified": 1666643448704
      },
      "Game": {
        "required": [],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": [
              "League of Legends"
            ]
          },
          "id": {
            "type": "string",
            "example": [
              "leagueoflegends"
            ]
          },
          "leagues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": [
                    "LEC"
                  ]
                },
                "matches": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/League"
                  }
                }
              }
            }
          }
        },
        "example": {
          "name": "League of Legends",
          "id": "leagueoflegends",
          "leagues": [
            {
              "name": "LEC",
              "matches": [
                {
                  "id": 0,
                  "teamA": "G2",
                  "coteA": 1.3,
                  "teamB": "FNC",
                  "coteB": 5.3,
                  "date": "2020-10-10T12:00:00Z",
                  "status": "finished",
                  "scoreA": 3,
                  "scoreB": 0
                }
              ]
            }
          ]
        },
        "x-last-modified": 1666644482428
      },
      "IllegalInputError": {
        "required": [
          "message",
          "code"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "maximum": 400,
            "minimum": 400,
            "type": "integer"
          }
        },
        "x-last-modified": 1667041129034
      },
      "UnauthorizedError": {
        "required": [
          "message",
          "code"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "maximum": 401,
            "minimum": 401,
            "type": "integer"
          }
        },
        "x-last-modified": 1667041129698
      },
      "ServerError": {
        "required": [
          "message",
          "code"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "maximum": 599,
            "minimum": 500,
            "type": "integer"
          }
        },
        "x-last-modified": 1667041130215
      },
      "UserId": {
        "type": "number",
        "x-last-modified": 1667084798658
      },
      "UserTest": {
        "description": "This object represents a user with :\n-mail\n-password\n-username\n-firstName\n-lastName\n-birthDate",
        "required": [
          "mail",
          "username",
          "password",
          "firstName",
          "lastName",
          "birthDate"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": [
              "toto"
            ]
          },
          "mail": {
            "type": "string",
            "example": [
              "qwerty.uiop@asdf.com"
            ]
          },
          "password": {
            "type": "string",
            "example": [
              "qwertyuiop[1234567890-"
            ]
          },
          "firstName": {
            "type": "string",
            "example": [
              "toto"
            ]
          },
          "lastName": {
            "type": "string",
            "example": [
              "titi"
            ]
          },
          "birthDate": {
            "type": "string",
            "example": [
              "30/10/2022"
            ]
          }
        },
        "example": {
          "username": "toto",
          "mail": "qwerty.uiop@asdf.com",
          "password": "qwertyuiop[1234567890-",
          "firstName": "toto",
          "lastName": "titi",
          "birthDate": "30/10/2022"
        },
        "x-last-modified": 1667086959481
      }
    },
    "headers": {
      "Authorization": {
        "schema": {
          "type": "string"
        },
        "description": "Authorization header"
      }
    },
    "securitySchemes": {
      "JWTAuth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "Example: \n> Authorization: Bearer <token>",
        "x-last-modified": 1666642244927
      }
    },
    "responses": {},
    "parameters": {}
  },
  "tags": [],
  "security": []
}
